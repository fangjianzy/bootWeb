<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.jimmy.framework.core.system.dao.MessageDao">

	<select id="get" resultType="com.jimmy.framework.core.system.domain.MessageDO">
		select `mid`,`msg_title`,`msg_type`,`ready`,`msg_time`,`from_user`,`to_user` from sys_message where mid = #{value}
	</select>

	<select id="list" resultType="com.jimmy.framework.core.system.domain.MessageDO">
		select `mid`,`msg_title`,`msg_type`,`ready`,`msg_time`,`from_user`,`to_user` from sys_message
        <where>  
		  		  <if test="mid != null and mid != ''"> and mid = #{mid} </if>
		  		  <if test="msgTitle != null and msgTitle != ''"> and msg_title = #{msgTitle} </if>
		  		  <if test="msgType != null and msgType != ''"> and msg_type = #{msgType} </if>
		  		  <if test="ready != null and ready != ''"> and ready = #{ready} </if>
		  		  <if test="msgTime != null and msgTime != ''"> and msg_time = #{msgTime} </if>
		  		  <if test="fromUser != null and fromUser != ''"> and from_user = #{fromUser} </if>
		  		  <if test="toUser != null and toUser != ''"> and to_user = #{toUser} </if>
		  		</where>
        <choose>
            <when test="sort != null and sort.trim() != ''">
                order by ${sort} ${order}
            </when>
			<otherwise>
                order by mid desc
			</otherwise>
        </choose>
		<if test="offset != null and limit != null">
			limit #{offset}, #{limit}
		</if>
	</select>
	
 	<select id="count" resultType="int">
		select count(*) from sys_message
		 <where>  
		  		  <if test="mid != null and mid != ''"> and mid = #{mid} </if>
		  		  <if test="msgTitle != null and msgTitle != ''"> and msg_title = #{msgTitle} </if>
		  		  <if test="msgType != null and msgType != ''"> and msg_type = #{msgType} </if>
		  		  <if test="ready != null and ready != ''"> and ready = #{ready} </if>
		  		  <if test="msgTime != null and msgTime != ''"> and msg_time = #{msgTime} </if>
		  		  <if test="fromUser != null and fromUser != ''"> and from_user = #{fromUser} </if>
		  		  <if test="toUser != null and toUser != ''"> and to_user = #{toUser} </if>
		  		</where>
	</select>
	 
	<insert id="save" parameterType="com.jimmy.framework.core.system.domain.MessageDO" useGeneratedKeys="true" keyProperty="mid">
		insert into sys_message
		(
			`msg_title`, 
			`msg_type`, 
			`ready`, 
			`msg_time`, 
			`from_user`, 
			`to_user`
		)
		values
		(
			#{msgTitle}, 
			#{msgType}, 
			#{ready}, 
			#{msgTime}, 
			#{fromUser}, 
			#{toUser}
		)
	</insert>
	 
	<update id="update" parameterType="com.jimmy.framework.core.system.domain.MessageDO">
		update sys_message 
		<set>
			<if test="msgTitle != null">`msg_title` = #{msgTitle}, </if>
			<if test="msgType != null">`msg_type` = #{msgType}, </if>
			<if test="ready != null">`ready` = #{ready}, </if>
			<if test="msgTime != null">`msg_time` = #{msgTime}, </if>
			<if test="fromUser != null">`from_user` = #{fromUser}, </if>
			<if test="toUser != null">`to_user` = #{toUser}</if>
		</set>
		where mid = #{mid}
	</update>
	
	<delete id="remove">
		delete from sys_message where mid = #{value}
	</delete>
	
	<delete id="batchRemove">
		delete from sys_message where mid in 
		<foreach item="mid" collection="array" open="(" separator="," close=")">
			#{mid}
		</foreach>
	</delete>

</mapper>